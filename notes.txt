Steps to manually get Gud working:
- Add the directory containing the shell script (src/gud) to PATH ---> export PATH=$PATH:/home/hanif/gud/src
    - This allows "gud" to work as a command, that will run the gud script as if you did ./gud




Ideas:
- Have an in-built means to locate all/local other gud repositories. In the event that a user is
in the wrong directory when trying to use gud commands.
    - Something like: "You are not in a Gud directory. Maybe you thought you were in <file_path_to_nearest_gud_dir>?"


gud init
- use "questionary" (https://pypi.org/project/questionary/) for the interactive selection screen(s)

gud status
- hash all files in the working dir (except "ignored" ones) and compare to the current index (.gud/index)
(which represents the latest "tree"), and match each file to a file in the index
    - if a file is in the working dir but not the index, label as "untracked"
    - if a file is in the working dir AND index, but they do not match hashes/permissons, label as "changed"
    - if a file is in the working dir AND index, and is indentical, do not list/label it
    - additionally, 

gud add <file>
- tldr: update the current index (.gud/index)
    - if the file is already in the index, update its hash + permissions
    - if the file is not in the index, add it as a row

gud commit
- tldr: save the current index as a "tree" object, then create a commit object, containing the tree's hash,
the hash of the current HEAD (listed under "parent" commit), and the authorship details, then hash this commit file
and name it by its hash. then update the HEAD to the hash of this commit

Useful notes:
- `with open()...` will open a file relative to the working directory where the initial script was invoked
    - NOT necessarily the directory where the (imported) module lies


Sticking points:
- How should the user install this?


-- Bundling this as a package: --

# do this only once
pip install setuptools wheel twine

# do these each time you want to update the package and pip install it
python setup.py sdist bdist_wheel
pip install dist/<package>.whl

## quick command for the above two
linux:
    rm -rf .gud/ && python setup.py sdist bdist_wheel && pip install dist/gud_finahdinner-0.1-py3-none-any.whl --force-reinstall
windows:
    rmdir /s /q .gud && python setup.py sdist bdist_wheel && pip install dist\gud_finahdinner-0.1-py3-none-any.whl --force-reinstall

-- Docker --

# each time you change the code
docker build -t gud-dev .

# running the container with an interactive shell
docker run -it gud-dev sh